// generated by Textmapper; DO NOT EDIT

package parser

import (
	"fmt"
)

type NodeType int

type Listener func(t NodeType, offset, endoffset int)

const (
	NoType NodeType = iota
	ContextType
	FsmName
	InputType
	OptionBool
	OptionFloat
	OptionInt
	OptionName
	OptionString
	SourceState
	StateName
	TargetState
	TypeName
	NodeTypeMax
)

var nodeTypeStr = [...]string{
	"NONE",
	"ContextType",
	"FsmName",
	"InputType",
	"OptionBool",
	"OptionFloat",
	"OptionInt",
	"OptionName",
	"OptionString",
	"SourceState",
	"StateName",
	"TargetState",
	"TypeName",
}

func (t NodeType) String() string {
	if t >= 0 && int(t) < len(nodeTypeStr) {
		return nodeTypeStr[t]
	}
	return fmt.Sprintf("node(%d)", t)
}
