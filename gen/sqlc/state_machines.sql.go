// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: state_machines.sql

package sqlc

import (
	"context"
)

const createStateMachine = `-- name: CreateStateMachine :one
INSERT INTO state_machines (name)
VALUES (?)
ON CONFLICT (name) DO UPDATE SET id = id
RETURNING id
`

func (q *Queries) CreateStateMachine(ctx context.Context, name string) (int64, error) {
	row := q.db.QueryRowContext(ctx, createStateMachine, name)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const getStateMachine = `-- name: GetStateMachine :one
SELECT id, name, created_at FROM state_machines
WHERE id = ?
`

func (q *Queries) GetStateMachine(ctx context.Context, id int64) (StateMachine, error) {
	row := q.db.QueryRowContext(ctx, getStateMachine, id)
	var i StateMachine
	err := row.Scan(&i.ID, &i.Name, &i.CreatedAt)
	return i, err
}
